[{"path":"https://nicolalove.github.io/shapeshiftr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 shapeshiftr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://nicolalove.github.io/shapeshiftr/articles/Introduction.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Introduction to shapeshiftr","text":"package motivated working animal telemetry dataset spanned decades. wanted measure link spatial distribution cohesion group, limited location data. tinkering reading literature, discovered measuring distances pairs individuals offered promising way understand relationship. degree social cohesion across group depends distance individuals, greater separation reduces ability coordinate actions.spacing reflects balance attraction (safety numbers finding mates) repulsion (avoiding competition). population size habitat conditions change, balance can shift—leading changes group spaced , even shape overall range (like shrinking, stretching, splitting apart).  Determining range spatial density individuals fully requires extensive sampling. method adds existing toolkit spatial analysis offering summary statistics require less sampling describe key features population’s range detect changes time spatial use. use two different measures coefficient variation (CV) IID: individual-level population-level. provide scale-free measure stays constant density changes without changing spatial distribution, range changes symmetrically population shifts. However, changes range shape /splitting subpopulations alter two CV measures, ratio, distinct ways:  full description method application, see: Love & Otto (2025). Spatial Signatures Population Cohesion. Methods Ecology Evolution. https://doi.org/","code":""},{"path":"https://nicolalove.github.io/shapeshiftr/articles/Introduction.html","id":"cv-functions","dir":"Articles","previous_headings":"","what":"CV functions","title":"Introduction to shapeshiftr","text":"package two streams functions depending type input.","code":""},{"path":"https://nicolalove.github.io/shapeshiftr/articles/Introduction.html","id":"stream-1-non-sf-data","dir":"Articles","previous_headings":"CV functions","what":"Stream 1: non-sf data","title":"Introduction to shapeshiftr","text":"Cartesian coordinates separate columns vectors whose distances substantially far enough apart account curvature earth, use cvpop(), cvind() cvatio(). functions produce numeric value, used within dplyr verbs, column, row contains CV IID given sampling unit (time, season, site). cvpop: calculates population-level CV inter-individual distances (CV distances pairs individuals) cvind: calculates individual-level CV inter-individual distances (CV average inter-individual distance across individuals) cvratio: calculates ratio individual-level CV population-level CV Consider, example, population 10 individuals sampled five times one day two years. dataset includes location (“x”, “y”), year sampled (“year”), identification individual sampled (“id”), illustrative purposes, column containing data relevant functions (“random”). data spread across multiple years, use CV functions pipe dataframe grouped year. year 1 year 2, population-level CV increased individual-level CV ratio decreased, indicative population fragmentation. Let’s visualize data check:  can see population split two subpopulations year 1 year 2.","code":"library(shapeshiftr) head(split_population) ##          x        y year random id ## 1 49.14853 71.34843    1   char  1 ## 2 59.24515 31.67412    1   char  2 ## 3 47.17220 66.03379    1   char  3 ## 4 57.60253 33.80525    1   char  4 ## 5 37.18787 31.27433    1   char  5 ## 6 67.75630 48.38934    1   char  6 sp <- split_population %>% group_by(year) %>%                        summarise(pop = cvpop(across(c(x,y))),                                  ind = cvind(across(c(x,y))),                                  ratio = cvratio(across(c(x,y))))  sp ## # A tibble: 2 × 4 ##    year   pop   ind ratio ##   <dbl> <dbl> <dbl> <dbl> ## 1     1 0.524 0.270 0.514 ## 2     2 0.626 0.147 0.235 ggplot(split_population, aes(x,y)) +   geom_point(aes(color = as.factor(year))) +   theme_bw() +   labs(color = \"year\")+   coord_equal(xlim = c(0, 100))"},{"path":"https://nicolalove.github.io/shapeshiftr/articles/Introduction.html","id":"stream-2-sf-data","dir":"Articles","previous_headings":"CV functions","what":"Stream 2: sf data","title":"Introduction to shapeshiftr","text":"dataframe coordinates stored within geometry column (sf dataframe), use iidist() cvmetrics_sf(). iidist: measures inter-individual distance every pair individuals within given sampling unit (e.g., day, season, patch). function takes sf dataframe input returns dataframe retains user-defined sampling unit columns (specified nest_by), along two bookkeeping columns identifying unique pair column calculated distance . cvmetrics_sf: measures population- individual-level CV IID ratio within given sampling unit. function takes dataframe containing inter-individual distances unique pair within given sampling unit returns dataframe population-level CV, individual-level CV, ratio, sampling unit columns. Consider population 10 individuals sampled five times one day two years, dataframe sf object. dataset includes year sampled (“year”), column containing data relevant functions (“random”), identification individual sampled (“id”), location coordinates stored geometry column. first use iidist() calculate IID unique pair-year, use output input cvmetrics_sf(). year 1 year 2, population-level CV increased individual-level CV ratio decreased, indicative population fragmentation. Let’s visualize data check:  can see population asymmetrically split year one year two, small proportion population moved north, whereas majority population moved slightly south.","code":"head(asym_split_sf) ## Simple feature collection with 6 features and 3 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: 29.31003 ymin: -22.40374 xmax: 29.35845 ymax: -22.33439 ## Geodetic CRS:  WGS 84 ##   year random id                   geometry ## 1    1   char  1 POINT (29.31003 -22.35791) ## 2    1   char  2 POINT (29.35845 -22.40374) ## 3    1   char  3 POINT (29.31591 -22.37886) ## 4    1   char  4   POINT (29.323 -22.33439) ## 5    1   char  5 POINT (29.31635 -22.35588) ## 6    1   char  6  POINT (29.3342 -22.35854) distances <- iidist(asym_split_sf, nest_by = \"year\", idcol = \"id\") head(distances) ## # A tibble: 6 × 4 ##    year ID1   ID2   iidist ##   <dbl> <fct> <fct>    [m] ## 1     1 2     1      7123. ## 2     1 3     1      2406. ## 3     1 4     1      2936. ## 4     1 5     1       688. ## 5     1 6     1      2486. ## 6     1 7     1      6041. cvs <- cvmetrics_sf(distances, distcol = \"iidist\", idcol = \"ID1\", grp_by = \"year\") ## Joining with `by = join_by(year)` head(cvs) ## # A tibble: 2 × 4 ##    year cvpop cvind ratio ##   <dbl> <dbl> <dbl> <dbl> ## 1     1 0.480 0.218 0.455 ## 2     2 0.672 0.118 0.175 ggplot(asym_split_sf) +   geom_sf(aes(color = as.factor(year))) +   labs(color = \"year\")+   coord_sf(xlim = c(29.15, 29.45),crs = st_crs(4326),datum = NA, expand = FALSE)+   scale_x_continuous(breaks = scales::pretty_breaks(n = 3)) +   theme_bw()"},{"path":"https://nicolalove.github.io/shapeshiftr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicola Love. Author, maintainer. Sarah Otto. Author.","code":""},{"path":"https://nicolalove.github.io/shapeshiftr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Love N, Otto S (2025). shapeshiftr: Detecting Population Range Reconfiguration via Inter-individual Distances. R package version 0.0.0.9000, https://nicolalove.github.io/shapeshiftr/.","code":"@Manual{,   title = {shapeshiftr: Detecting Population Range Reconfiguration via Inter-individual Distances},   author = {Nicola Love and Sarah Otto},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://nicolalove.github.io/shapeshiftr/}, }"},{"path":[]},{"path":"https://nicolalove.github.io/shapeshiftr/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Detecting Population Range Reconfiguration via Inter-individual Distances","text":"shapeshiftr calculates inter-individual distances (IID) group population, compares population- vs individual-level variation distances identify spatial signatures range shape change. shapeshiftr provides 3 functions calculate coefficient variation (CV) simple location data: cvpop() calculates population-level CV IID (CV pairwise distances) cvind() calculates individual-level CV IID ( CV average pairwise distance per individual amoung individuals) cvratio() calculates ratio individual-level CV population-level CV provides 2 functions dataframes sf geometry column: iidist() measures inter-individual distance every pair individuals within given sampling unit (day, season, patch) cvmetrics_sf() measures population- individual-level CV IID ratio within given sampling unit (day, season, patch) detailed introduction, please see vignette(\"shapeshiftr\") shapeshiftr.","code":""},{"path":"https://nicolalove.github.io/shapeshiftr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Detecting Population Range Reconfiguration via Inter-individual Distances","text":"now, package can installed directly GitHub one two ways. Recommended: :","code":"install.packages(\"pak\") pak::pak(\"nicolalove/shapeshiftr\") install.packages(\"devtools\") devtools::install_github(\"nicolalove/shapeshiftr\")"},{"path":"https://nicolalove.github.io/shapeshiftr/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Detecting Population Range Reconfiguration via Inter-individual Distances","text":"cvpop(), cvind() cvratio() produce numeric value, used within dplyr verbs, column, row contains CV IID given sampling unit (time, season, site). useful location data vector, matrix dataframe without geometry column. iidist() returns dataframe containing column inter-individual distances given sampling unit (time, season, site). useful sf dataframe locations stored geometry column. cvmetrics_sf returns dataframe three CV metrics separate columns. useful already inter-individual distances measured, downstream analysis iidist().","code":"library(shapeshiftr)   # a single numeric value cvpop(split_population[, c(\"x\", \"y\")]  # within a dataframe split_population %>% group_by(year) %>% summarise(pop = cvpop(across(x,y)), ind = cvind(across(x,y)), ratio = cvratio(across(x,y))) library(sf) distances <- iid(asym_split_sf, nest_by = c(\"year\"), idcol = \"id\") head(distances) cvdf <- cvmetrics_sf(distances, distcol = \"iidist\" idcol = \"id\", grp_by = c(\"year\")) head(cvdf)"},{"path":"https://nicolalove.github.io/shapeshiftr/reference/asym_split_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial dataframe to showcase asymmetrical fragmentation — asym_split_sf","title":"Spatial dataframe to showcase asymmetrical fragmentation — asym_split_sf","text":"sf dataframe containing geometry column column locations sampled animals 2 years.","code":""},{"path":"https://nicolalove.github.io/shapeshiftr/reference/asym_split_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial dataframe to showcase asymmetrical fragmentation — asym_split_sf","text":"","code":"asym_split_sf"},{"path":"https://nicolalove.github.io/shapeshiftr/reference/asym_split_sf.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Spatial dataframe to showcase asymmetrical fragmentation — asym_split_sf","text":"dataframe 100 rows 4 columns. describe itemyearA column containing year animals sampled itemrandomA column containing data relevant functions itemidThe name animal sampled item(geometry)sf geometry column storing spatial point coordinates sampled individual.","code":""},{"path":"https://nicolalove.github.io/shapeshiftr/reference/asym_split_sf.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Spatial dataframe to showcase asymmetrical fragmentation — asym_split_sf","text":"Created Nicola Love, creating 3 bivariate normal distributions generated MASS::mvrnorm(), converted sf dataframe unprojected geographic coordinates (EPSG:4326). three distributions standard deviation √.001. year 1, distribution centered c(29.285,-22.373) Venetia-Limpopo Nature Reserve. two distributions year 2 centered northern southern ends reserve: c(29.285,-22.15) c(29.285,-22.45), respectively.","code":""},{"path":"https://nicolalove.github.io/shapeshiftr/reference/asym_split_sf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spatial dataframe to showcase asymmetrical fragmentation — asym_split_sf","text":"","code":"data(asym_split_sf)"},{"path":"https://nicolalove.github.io/shapeshiftr/reference/cvind.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Coefficient of Variation (CV) of Inter-individual Distances at the Individual-level — cvind","title":"Calculate Coefficient of Variation (CV) of Inter-individual Distances at the Individual-level — cvind","text":"function calculates CV average inter-individual distance amoung individuals, optionally applying log10 transformation. assume individuals sampled approximately within time point. input data frame multiple sampling sessions, suggest using function pipe data frame grouped, e.g., data %>% group_by(day, year) %>% summarise(cvind = cvind(across(c(x,y)))). Note use across()!","code":""},{"path":"https://nicolalove.github.io/shapeshiftr/reference/cvind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Coefficient of Variation (CV) of Inter-individual Distances at the Individual-level — cvind","text":"","code":"cvind(points, log10 = FALSE)"},{"path":"https://nicolalove.github.io/shapeshiftr/reference/cvind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Coefficient of Variation (CV) of Inter-individual Distances at the Individual-level — cvind","text":"points data frame, matrix, two vectors locations, row sampled individual. Syntax examples different input types: points data frame: specify columns, e.g., cvind(df[, c(\"x\", \"y\")]) points matrix: input directly, e.g., cvind(m) points two vectors: bind , e.g., cvind(cbind(x, y)) log10 optional argument log transformation CV inter-individual distances.","code":""},{"path":"https://nicolalove.github.io/shapeshiftr/reference/cvind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Coefficient of Variation (CV) of Inter-individual Distances at the Individual-level — cvind","text":"single numeric value calculated coefficient variation average inter-individual distance amoung individuals. used tidyverse pipe, output column numbers.","code":""},{"path":"https://nicolalove.github.io/shapeshiftr/reference/cvmetrics_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Coefficient of Variation (CV) for Inter-individual Distances — cvmetrics_sf","title":"Calculate Coefficient of Variation (CV) for Inter-individual Distances — cvmetrics_sf","text":"function calculates coefficient variation inter-individual distances population- individual-level CV, ratio two, within data frame, optionally applying log10 transformation.","code":""},{"path":"https://nicolalove.github.io/shapeshiftr/reference/cvmetrics_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Coefficient of Variation (CV) for Inter-individual Distances — cvmetrics_sf","text":"","code":"cvmetrics_sf(iid_dataset, distcol, idcol, grp_by, log10 = FALSE)"},{"path":"https://nicolalove.github.io/shapeshiftr/reference/cvmetrics_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Coefficient of Variation (CV) for Inter-individual Distances — cvmetrics_sf","text":"iid_dataset data frame containing column inter-individual distances sampling unit. distcol name column containing inter-individual distances quotations, e.g., \"iidist\". can class \"numeric\" \"units\". idcol name column containing IDs individuals quotations, e.g., \"animalID\". used iidist() create values, just choose one identification columns (either \"ID1\" \"ID2\"). grp_by variables group calculating CVs metric quotations, e.g., c(\"yday\", \"year\", \"site\"). log10 logical value indicating whether apply log10 transformation CV values.","code":""},{"path":"https://nicolalove.github.io/shapeshiftr/reference/cvmetrics_sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Coefficient of Variation (CV) for Inter-individual Distances — cvmetrics_sf","text":"data frame calculated CV values population, individual ratio grouping variable specified (hour, day, season, etc).","code":""},{"path":"https://nicolalove.github.io/shapeshiftr/reference/cvpop.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Coefficient of Variation (CV) of Inter-individual Distances at the Population-level — cvpop","title":"Calculate Coefficient of Variation (CV) of Inter-individual Distances at the Population-level — cvpop","text":"function calculates CV inter-individual distance every pair individuals, optionally applying log10 transformation. assume individuals sampled approximately within time point. input data frame multiple sampling sessions, suggest using function pipe data frame grouped, e.g., data %>% group_by(day, year) %>% summarise(cvpop = cvpop(across(c(x,y)))). Note use across()!","code":""},{"path":"https://nicolalove.github.io/shapeshiftr/reference/cvpop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Coefficient of Variation (CV) of Inter-individual Distances at the Population-level — cvpop","text":"","code":"cvpop(points, log10 = FALSE)"},{"path":"https://nicolalove.github.io/shapeshiftr/reference/cvpop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Coefficient of Variation (CV) of Inter-individual Distances at the Population-level — cvpop","text":"points data frame, matrix, two vectors locations, row sampled individual. Syntax examples different input types: points data frame: specify columns, e.g., cvpop(df[, c(\"x\", \"y\")]) points matrix: input directly, e.g., cvpop(m) points two vectors: bind , e.g., cvpop(cbind(x, y)) log10 optional argument log transformation CV inter-individual distances.","code":""},{"path":"https://nicolalove.github.io/shapeshiftr/reference/cvpop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Coefficient of Variation (CV) of Inter-individual Distances at the Population-level — cvpop","text":"single numeric value calculated coefficient variation inter-individual distances every pair individuals. used tidyverse pipe, output column numbers.","code":""},{"path":"https://nicolalove.github.io/shapeshiftr/reference/cvratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Ratio of Individual- to Population-level Coefficient of Variation (CV) of Inter-individual Distances — cvratio","title":"Calculate the Ratio of Individual- to Population-level Coefficient of Variation (CV) of Inter-individual Distances — cvratio","text":"function calculates ratio individual-level CVs population-level CVs inter-individual distances, optionally applying log10 transformation. assume individuals sampled approximately within time point. input data frame multiple sampling sessions, suggest using function pipe data frame grouped, e.g., data %>% group_by(day, year) %>% summarise(cvratio = cvratio(across(c(x,y)))). Note use across()!","code":""},{"path":"https://nicolalove.github.io/shapeshiftr/reference/cvratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Ratio of Individual- to Population-level Coefficient of Variation (CV) of Inter-individual Distances — cvratio","text":"","code":"cvratio(points, log10 = FALSE)"},{"path":"https://nicolalove.github.io/shapeshiftr/reference/cvratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Ratio of Individual- to Population-level Coefficient of Variation (CV) of Inter-individual Distances — cvratio","text":"points data frame, matrix, two vectors locations, row sampled individual. Syntax examples different input types: points data frame: specify columns, e.g., cvratio(df[, c(\"x\", \"y\")]) points matrix: input directly, e.g., cvratio(m) points two vectors: bind , e.g., cvratio(cbind(x, y)) log10 optional argument log transformation ratio CVs.","code":""},{"path":"https://nicolalove.github.io/shapeshiftr/reference/iidist.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Inter-individual Distance Between Every Pair of Individuals — iidist","title":"Calculate the Inter-individual Distance Between Every Pair of Individuals — iidist","text":"function calculates inter-individual distance every pair individuals within sampling unit sf data frame.","code":""},{"path":"https://nicolalove.github.io/shapeshiftr/reference/iidist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Inter-individual Distance Between Every Pair of Individuals — iidist","text":"","code":"iidist(dataset, nest_by, idcol)"},{"path":"https://nicolalove.github.io/shapeshiftr/reference/iidist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Inter-individual Distance Between Every Pair of Individuals — iidist","text":"dataset sf data frame containing geometry column nest_by string column names time unit, patch, covariate calculate distance - smallest time unit possible multiple instances individual period. example, daily sampling frequency user interested comparing seasons, columns \"yday\" \"season.\" compare within patch (different populations), yday, season, patch. idcol name column containing IDs individuals quotations, e.g., \"animalID\".","code":""},{"path":"https://nicolalove.github.io/shapeshiftr/reference/iidist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Inter-individual Distance Between Every Pair of Individuals — iidist","text":"data frame containing column inter-individual distances specified time periods.","code":""},{"path":"https://nicolalove.github.io/shapeshiftr/reference/shapeshiftr.html","id":null,"dir":"Reference","previous_headings":"","what":"shapeshiftr: Analyze Group/Home Range Shape Shifts Using Location Data. — shapeshiftr","title":"shapeshiftr: Analyze Group/Home Range Shape Shifts Using Location Data. — shapeshiftr","text":"R package detecting population range reconfiguration via inter-individual distances","code":""},{"path":"https://nicolalove.github.io/shapeshiftr/reference/shapeshiftr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"shapeshiftr: Analyze Group/Home Range Shape Shifts Using Location Data. — shapeshiftr","text":"package designed spatial temporal analysis location data, especially multiple sampling sessions (seasons, years, sites, populations, etc).","code":""},{"path":"https://nicolalove.github.io/shapeshiftr/reference/shapeshiftr.html","id":"reference","dir":"Reference","previous_headings":"","what":"Reference","title":"shapeshiftr: Analyze Group/Home Range Shape Shifts Using Location Data. — shapeshiftr","text":"full description method application, see: Love & Otto (2025). Spatial Signatures Population Cohesion. Methods Ecology Evolution. https://doi.org/##","code":""},{"path":[]},{"path":"https://nicolalove.github.io/shapeshiftr/reference/shapeshiftr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"shapeshiftr: Analyze Group/Home Range Shape Shifts Using Location Data. — shapeshiftr","text":"Maintainer: Nicola Love nicolalove@zoology.ubc.ca Authors: Sally Otto","code":""},{"path":"https://nicolalove.github.io/shapeshiftr/reference/split_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Data to showcase a population fragmenting into two subpopulations — split_population","title":"Data to showcase a population fragmenting into two subpopulations — split_population","text":"dataset containing locations sampled animals 2 years","code":""},{"path":"https://nicolalove.github.io/shapeshiftr/reference/split_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data to showcase a population fragmenting into two subpopulations — split_population","text":"","code":"split_population"},{"path":"https://nicolalove.github.io/shapeshiftr/reference/split_population.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data to showcase a population fragmenting into two subpopulations — split_population","text":"data frame 100 rows 5 columns. describe itemxLongitude animal itemyLatitude animal itemyearYear animal sampled itemrandomA column containing data relevant functions itemidThe name animal sampled","code":""},{"path":"https://nicolalove.github.io/shapeshiftr/reference/split_population.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data to showcase a population fragmenting into two subpopulations — split_population","text":"Created Nicola Love, creating 3 bivariate normal distributions using MASS::mvrnorm(). three distributions standard deviation 15, distribution year 1 centered c(50,50), two distributions year 2 centered c(50,0) c(50, 100).","code":""},{"path":"https://nicolalove.github.io/shapeshiftr/reference/split_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data to showcase a population fragmenting into two subpopulations — split_population","text":"","code":"data(split_population)"}]
